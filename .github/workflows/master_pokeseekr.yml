# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - PokeSeekr

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
          
      - name: Restore dependencies
        run: dotnet restore
          
      - name: Build with dotnet
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --configuration Release --no-build
        
      - name: dotnet publish
        run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          
      - name: Set up App Settings
        shell: pwsh
        run: |
          Write-Host "Current directory: $(Get-Location)"
          Write-Host "Listing directory contents:"
          Get-ChildItem -Path . | Format-Table -AutoSize
          
          $appSettingsPath = "./appsettings.json"
          
          Write-Host "Checking if $appSettingsPath exists: $(Test-Path $appSettingsPath)"
          
          # Create or load the appsettings.json file
          if (Test-Path $appSettingsPath) {
            Write-Host "Loading existing appsettings.json"
            $appSettings = Get-Content $appSettingsPath | ConvertFrom-Json
          } else {
            Write-Host "Creating new appsettings.json"
            $appSettings = New-Object -TypeName PSObject
          }
          
          # Add your secret configuration here
          $appSettings | Add-Member -Type NoteProperty -Name "PokemonTcg" -Value @{
            "ApiKey" = "${{ secrets.POKEMON_TCG_API_KEY }}"
          } -Force
          
          # Add any other configuration settings
          # Example for database connection string
          $appSettings | Add-Member -Type NoteProperty -Name "ConnectionStrings" -Value @{
            "DefaultConnection" = "${{ secrets.DB_CONNECTION_STRING }}"
          } -Force
          
          $appSettings | ConvertTo-Json -Depth 10 | Set-Content $appSettingsPath
          
          Write-Host "Checking if $appSettingsPath exists after update: $(Test-Path $appSettingsPath)"
          Write-Host "Content of appsettings.json (sanitized):"
          $content = Get-Content $appSettingsPath -Raw
          $content = $content -replace '"ApiKey"\s*:\s*"[^"]*"', '"ApiKey": "[REDACTED]"'
          $content = $content -replace '"DefaultConnection"\s*:\s*"[^"]*"', '"DefaultConnection": "[REDACTED]"'
          Write-Host $content
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'PokeSeekr'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_64B2EDB413314D41A64995B8AC7A4C47 }}